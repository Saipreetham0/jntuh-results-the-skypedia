import { NextResponse } from 'next/server';
import { redis } from '@/lib/redis';

export async function GET(request) {
  const { searchParams } = new URL(request.url);
  const rollNumber = searchParams.get('htno');

  if (!rollNumber) {
    return NextResponse.json({ error: "Roll number is required" }, { status: 400 });
  }

  try {
    const start = Date.now();
    let cache = await redis.get(rollNumber);

    if (cache) {
      console.log("Loading from cache");
      const parsedCache = JSON.parse(cache);
      const result = {
        data: parsedCache,
        type: "redis"
      };

      const end = Date.now();
      console.log(`Request processed in ${end - start}ms`);

      return NextResponse.json(result.data.data);
    } else {
      console.log("Data not found in cache");
      return NextResponse.json({ error: "Data not found" }, { status: 404 });
    }
  } catch (error) {
    console.error("Error retrieving data:", error);
    return NextResponse.json({ error: "Internal server error" }, { status: 500 });
  }
}